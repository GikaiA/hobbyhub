{"ast":null,"code":"import React,{useState}from\"react\";import{Link,useNavigate}from\"react-router-dom\";import\"./Login.css\";import supabase from\"../supabaseClient\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const[email,setEmail]=useState(\"\");const[password,setPassword]=useState(\"\");const[error,setError]=useState(\"\");const navigate=useNavigate();const handleLogin=async e=>{e.preventDefault();const{error}=await supabase.auth.signInWithPassword({email,password});if(error){setError(error.message);}else{navigate(\"/feed\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"side-navbar\"}),/*#__PURE__*/_jsx(\"div\",{className:\"login-sub-section\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"login-form\",onSubmit:handleLogin,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsx(\"label\",{className:\"login-label\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",className:\"login-field\",value:email,onChange:e=>setEmail(e.target.value)}),/*#__PURE__*/_jsx(\"label\",{className:\"login-label\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",className:\"login-field\",value:password,onChange:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"login-button\",children:\"Log In\"}),error&&/*#__PURE__*/_jsx(\"div\",{style:{color:'red',marginTop:'10px'},children:error}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Don't have an account? \",/*#__PURE__*/_jsx(Link,{to:\"/register\",children:\"Sign Up\"})]})]})})]});};export default Login;","map":{"version":3,"names":["React","useState","Link","useNavigate","supabase","jsx","_jsx","jsxs","_jsxs","Login","email","setEmail","password","setPassword","error","setError","navigate","handleLogin","e","preventDefault","auth","signInWithPassword","message","className","children","onSubmit","type","placeholder","value","onChange","target","style","color","marginTop","to"],"sources":["C:/Users/Kai/Desktop/hobbyhub/src/Login/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nimport supabase from \"../supabaseClient\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    const { error } = await supabase.auth.signInWithPassword({\r\n      email,\r\n      password,\r\n    });\r\n\r\n    if (error) {\r\n      setError(error.message);\r\n    } else {\r\n      navigate(\"/feed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-section\">\r\n      <div className=\"side-navbar\"></div>\r\n      <div className=\"login-sub-section\">\r\n        <form className=\"login-form\" onSubmit={handleLogin}>\r\n          <h2>Login</h2>\r\n          <label className=\"login-label\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"login-field\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n          />\r\n          <label className=\"login-label\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"login-field\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n          <button type=\"submit\" className=\"login-button\">\r\n            Log In\r\n          </button>\r\n          {error && <div style={{ color: 'red', marginTop: '10px' }}>{error}</div>}\r\n          <p>\r\n            Don't have an account? <Link to=\"/register\">Sign Up</Link>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,IAAI,CAAEC,WAAW,KAAQ,kBAAkB,CACpD,MAAO,aAAa,CACpB,MAAO,CAAAC,QAAQ,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzC,KAAM,CAAAC,KAAK,CAAGA,CAAA,GAAM,CAClB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACW,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACa,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAAe,QAAQ,CAAGb,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAc,WAAW,CAAG,KAAO,CAAAC,CAAC,EAAK,CAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,KAAM,CAAEL,KAAM,CAAC,CAAG,KAAM,CAAAV,QAAQ,CAACgB,IAAI,CAACC,kBAAkB,CAAC,CACvDX,KAAK,CACLE,QACF,CAAC,CAAC,CAEF,GAAIE,KAAK,CAAE,CACTC,QAAQ,CAACD,KAAK,CAACQ,OAAO,CAAC,CACzB,CAAC,IAAM,CACLN,QAAQ,CAAC,OAAO,CAAC,CACnB,CACF,CAAC,CAED,mBACER,KAAA,QAAKe,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BlB,IAAA,QAAKiB,SAAS,CAAC,aAAa,CAAM,CAAC,cACnCjB,IAAA,QAAKiB,SAAS,CAAC,mBAAmB,CAAAC,QAAA,cAChChB,KAAA,SAAMe,SAAS,CAAC,YAAY,CAACE,QAAQ,CAAER,WAAY,CAAAO,QAAA,eACjDlB,IAAA,OAAAkB,QAAA,CAAI,OAAK,CAAI,CAAC,cACdlB,IAAA,UAAOiB,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,OAAK,CAAO,CAAC,cAC5ClB,IAAA,UACEoB,IAAI,CAAC,OAAO,CACZC,WAAW,CAAC,OAAO,CACnBJ,SAAS,CAAC,aAAa,CACvBK,KAAK,CAAElB,KAAM,CACbmB,QAAQ,CAAEX,CAAC,EAAIP,QAAQ,CAACO,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE,CACzC,CAAC,cACFtB,IAAA,UAAOiB,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,UAAQ,CAAO,CAAC,cAC/ClB,IAAA,UACEoB,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,UAAU,CACtBJ,SAAS,CAAC,aAAa,CACvBK,KAAK,CAAEhB,QAAS,CAChBiB,QAAQ,CAAEX,CAAC,EAAIL,WAAW,CAACK,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE,CAC5C,CAAC,cACFtB,IAAA,WAAQoB,IAAI,CAAC,QAAQ,CAACH,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,QAE/C,CAAQ,CAAC,CACRV,KAAK,eAAIR,IAAA,QAAKyB,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAK,CAAEC,SAAS,CAAE,MAAO,CAAE,CAAAT,QAAA,CAAEV,KAAK,CAAM,CAAC,cACxEN,KAAA,MAAAgB,QAAA,EAAG,yBACsB,cAAAlB,IAAA,CAACJ,IAAI,EAACgC,EAAE,CAAC,WAAW,CAAAV,QAAA,CAAC,SAAO,CAAM,CAAC,EACzD,CAAC,EACA,CAAC,CACJ,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAf,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}